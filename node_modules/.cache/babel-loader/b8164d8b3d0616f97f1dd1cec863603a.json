{"ast":null,"code":"var _jsxFileName = \"/home/reagan/repos/cv-app/src/components/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  // state to store value from inputs\n  const [inputValue, setInputValue] = useState('');\n  const [showButtons, setShowButtons] = useState(true);\n\n  const ClearButton = () => {\n    setInputValue('');\n    setShowButtons(false);\n  };\n\n  const EditButtons = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => ClearButton(),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowButtons(false),\n      children: \"Ok\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDoubleClick: () => setShowButtons(true),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), showButtons ? /*#__PURE__*/_jsxDEV(EditButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"K045/ytt0GbTN/GpqlPz9jNXxZc=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/reagan/repos/cv-app/src/components/Input.js"],"names":["React","useState","Input","inputValue","setInputValue","showButtons","setShowButtons","ClearButton","EditButtons","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxBH,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAHD;;AAKA,QAAME,WAAW,GAAG,mBAClB;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMD,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMD,cAAc,CAAC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,sBACE;AAAK,IAAA,aAAa,EAAE,MAAMA,cAAc,CAAC,IAAD,CAAxC;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEH,UAFT;AAGE,MAAA,QAAQ,EAAGM,CAAD,IAAOL,aAAa,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAHhC;AAAA;AAAA;AAAA;AAAA,YADF,EAMGN,WAAW,gBAAG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAqB,IANnC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA3BD;;GAAMH,K;;KAAAA,K;AA6BN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Input = () => {\n  // state to store value from inputs\n  const [inputValue, setInputValue] = useState('');\n  const [showButtons, setShowButtons] = useState(true);\n\n  const ClearButton = () => {\n    setInputValue('');\n    setShowButtons(false);\n  };\n\n  const EditButtons = () => (\n    <div>\n      <button onClick={() => ClearButton()}>X</button>\n      <button onClick={() => setShowButtons(false)}>Ok</button>\n    </div>\n  );\n\n  return (\n    <div onDoubleClick={() => setShowButtons(true)}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      {showButtons ? <EditButtons /> : null}\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}