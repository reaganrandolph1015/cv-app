{"ast":null,"code":"var _jsxFileName = \"/home/reagan/repos/cv-app/src/components/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../styles/Style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input(props) {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [showClear, setShowClear] = useState(false);\n\n  const renderClear = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearInput,\n      children: \"\\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  };\n\n  const clearInput = () => {\n    setInputValue('');\n    setShowClear(false);\n  };\n\n  const handleInput = e => {\n    setInputValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onBlur: () => setShowClear(false),\n          name: props.name,\n          type: \"text\",\n          style: props.style,\n          placeholder: props.placeholder,\n          value: inputValue,\n          onChange: handleInput,\n          onClick: () => setShowClear(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), showClear ? renderClear() : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"K5ynIEnVw6AbDntEYJfK1avIGEk=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/reagan/repos/cv-app/src/components/Input.js"],"names":["React","useState","Input","props","inputValue","setInputValue","showClear","setShowClear","renderClear","clearInput","handleInput","e","target","value","symbol","name","style","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qBAAP;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxB,wBAAO;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACvBJ,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,QAAMG,WAAW,GAAIC,CAAD,IAAO;AACzBN,IAAAA,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAA,kBAAKV,KAAK,CAACW;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE;AACE,UAAA,MAAM,EAAE,MAAMP,YAAY,CAAC,KAAD,CAD5B;AAEE,UAAA,IAAI,EAAEJ,KAAK,CAACY,IAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAEZ,KAAK,CAACa,KAJf;AAKE,UAAA,WAAW,EAAEb,KAAK,CAACc,WALrB;AAME,UAAA,KAAK,EAAEb,UANT;AAOE,UAAA,QAAQ,EAAEM,WAPZ;AAQE,UAAA,OAAO,EAAE,MAAMH,YAAY,CAAC,IAAD;AAR7B;AAAA;AAAA;AAAA;AAAA,gBADF,EAWGD,SAAS,GAAGE,WAAW,EAAd,GAAmB,IAX/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAvCQN,K;;KAAAA,K;AAyCT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Style.css';\n\nfunction Input(props) {\n  const [inputValue, setInputValue] = useState('');\n  const [showClear, setShowClear] = useState(false);\n\n  const renderClear = () => {\n    return <button onClick={clearInput}>‚ùå</button>;\n  };\n\n  const clearInput = () => {\n    setInputValue('');\n    setShowClear(false);\n  };\n\n  const handleInput = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>{props.symbol}</h2>\n      </div>\n      <fieldset>\n        <div className=\"input-field-container\">\n          <input\n            onBlur={() => setShowClear(false)}\n            name={props.name}\n            type=\"text\"\n            style={props.style}\n            placeholder={props.placeholder}\n            value={inputValue}\n            onChange={handleInput}\n            onClick={() => setShowClear(true)}\n          />\n          {showClear ? renderClear() : null}\n        </div>\n      </fieldset>\n    </div>\n  );\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}