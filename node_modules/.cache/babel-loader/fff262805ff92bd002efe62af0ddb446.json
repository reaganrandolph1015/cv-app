{"ast":null,"code":"var _jsxFileName = \"/home/reagan/repos/cv-app/src/components/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  // state to store value from inputs\n  const [inputValue, setInputValue] = useState('');\n  const [showResults, setShowResults] = useState(false);\n\n  const Buttons = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setInputValue(''),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowResults(true),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), showResults ? /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"7kneswb97aGwZyXXY53Iv82d4Lk=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/reagan/repos/cv-app/src/components/Input.js"],"names":["React","useState","Input","inputValue","setInputValue","showResults","setShowResults","Buttons","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMM,OAAO,GAAG,mBACd;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMH,aAAa,CAAC,EAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAME,cAAc,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEH,UAFT;AAGE,MAAA,QAAQ,EAAGK,CAAD,IAAOJ,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAHhC;AAAA;AAAA;AAAA;AAAA,YADF,EAMGL,WAAW,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiB,IAN/B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAtBD;;GAAMH,K;;KAAAA,K;AAwBN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Input = () => {\n  // state to store value from inputs\n  const [inputValue, setInputValue] = useState('');\n  const [showResults, setShowResults] = useState(false);\n\n  const Buttons = () => (\n    <div>\n      <button onClick={() => setInputValue('')}>X</button>\n      <button onClick={() => setShowResults(true)}>X</button>\n    </div>\n  );\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      {showResults ? <Buttons /> : null}\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}