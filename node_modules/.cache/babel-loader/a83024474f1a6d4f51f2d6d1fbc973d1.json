{"ast":null,"code":"var _jsxFileName = \"/home/reagan/repos/cv-app/src/components/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../styles/Style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input(props) {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [showClear, setShowClear] = useState(false);\n  const [focus, setFocus] = useState(false);\n\n  const handleFocus = () => {\n    return focus ? 'input-focus' : null;\n  };\n\n  const renderClear = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearInput,\n      children: \"\\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  };\n\n  const clearInput = () => {\n    setInputValue('');\n    setShowClear(false);\n  };\n\n  const handleInput = e => {\n    setInputValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-field-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: props.name,\n        type: \"text\",\n        placeholder: props.placeholder,\n        value: inputValue,\n        onChange: handleInput,\n        onClick: () => setShowClear(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), showClear ? renderClear() : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"0Z8e9oY5e+vsIaucg3Uy7lRfTJk=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/reagan/repos/cv-app/src/components/Input.js"],"names":["React","useState","Input","props","inputValue","setInputValue","showClear","setShowClear","focus","setFocus","handleFocus","renderClear","clearInput","handleInput","e","target","value","symbol","name","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qBAAP;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACxB,WAAOF,KAAK,GAAG,aAAH,GAAmB,IAA/B;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxB,wBAAO;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACvBP,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,QAAMM,WAAW,GAAIC,CAAD,IAAO;AACzBT,IAAAA,aAAa,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACE;AAAA,6BACE;AAAA,kBAAKb,KAAK,CAACc;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE;AACE,QAAA,IAAI,EAAEd,KAAK,CAACe,IADd;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAEf,KAAK,CAACgB,WAHrB;AAIE,QAAA,KAAK,EAAEf,UAJT;AAKE,QAAA,QAAQ,EAAES,WALZ;AAME,QAAA,OAAO,EAAE,MAAMN,YAAY,CAAC,IAAD;AAN7B;AAAA;AAAA;AAAA;AAAA,cADF,EASGD,SAAS,GAAGK,WAAW,EAAd,GAAmB,IAT/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAxCQT,K;;KAAAA,K;AA0CT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Style.css';\n\nfunction Input(props) {\n  const [inputValue, setInputValue] = useState('');\n  const [showClear, setShowClear] = useState(false);\n  const [focus, setFocus] = useState(false);\n\n  const handleFocus = () => {\n    return focus ? 'input-focus' : null;\n  };\n\n  const renderClear = () => {\n    return <button onClick={clearInput}>‚ùå</button>;\n  };\n\n  const clearInput = () => {\n    setInputValue('');\n    setShowClear(false);\n  };\n\n  const handleInput = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <div className=\"input-field-container\">\n      <div>\n        <h2>{props.symbol}</h2>\n      </div>\n      <fieldset>\n        <input\n          name={props.name}\n          type=\"text\"\n          placeholder={props.placeholder}\n          value={inputValue}\n          onChange={handleInput}\n          onClick={() => setShowClear(true)}\n        />\n        {showClear ? renderClear() : null}\n      </fieldset>\n    </div>\n  );\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}